/**
  |=========================================================================================
                // масив и изменить его 
  |==========================================================================================
*/

// /////////////////  0       1        2        3
// const friends = ["dima", "rost", "vetal", "vova"];
// ///////////////////////////////////////////////////////////
// friends[0] = "dimon"; // ["dimon", "rost", "vetal", "vova"];
// friends[3] = "vovhik"; // ["dimon", "rost", "vetal", "vova"];
// ///////////////////////////////////////////////////////////
// console.table(friends);

///////////////////////////////////////////////////////////////////////////////////////////////

/**
  |=========================================================================================
                // масив передача по ссылки и значению
  |==========================================================================================
*/
// const a = [1, 2, 3];
// const b = a;

// a[0] = 500;

// // в масиве а и b будет [500, 2, 3]

///////////////////////////////////////////////////////////////////////////////////////////////////

/**
  |=========================================================================================
                // пербор (итерация) масива
  |==========================================================================================
*/
// const friends = ["dima", "rost", "vetal", "vova"];
// console.table(friends);
// const lastIndex = friends.length - 1;

// for (let i = 0; i <= lastIndex; i += 1) {
//   console.log(friends[i]);
// }

// Вариант 2 добавить к масиву каждому слову любое
// const friends = ["dima", "rost", "vetal", "vova"];
// console.table(friends);

// for (let i = 0; i < friends.length; i += 1) {
//   friends[i] += " - дружбан";
// }

// //Вариант FOR OF
// const friends = ["dima", "rost", "vetal", "vova"];

// for (const friend of friends) {
//   console.log(friend);
// }

///////////////////////////////////////////////////////////////////////////////////////////////////

/**
  |=========================================================================================
                задача
      Посчитать общую сумму покупок
  |==========================================================================================
*/
//решение 1
// const cart = [15, 45, 54, 55, 80, 100];
// let total = 0;

// for (let i = 0; i < cart.length; i += 1) {
//   total += cart[i];
// }
// console.log(total);

//решение 2 чере for of
// const cart = [15, 45, 54, 55, 80, 100];
// let total = 0;

// for (const a of cart) {
//   total += a;
// }
// console.log(total);
///////////////////////////////////////////////////////////////////////////////////////////////////

/**
  |=========================================================================================
                задача for if
      напиши скрипт который подсчитает всех четных чисел
  |==========================================================================================
*/

// const numbers = [1, 5, 8, 9, 12, 4, 15, 27, 30, 18, 14];
// let total = 0;

// for (let i = 0; i < numbers.length; i += 1) {
//   const number = numbers[i];

//   if (number % 2 === 0);
//   total += number;
// }

// console.log("общая сумма четных: ", total);

///////////////////////////////////////////////////////////////////////////////////////////////////

//Напиши скрипт поиска логина

//Если логина нет, вывести сообщение Пользователь [логин] не найден.

//Если нашли логин, вывести сообщение Пользователь [логин] найден.

// const logins = ["m4ngoDoge", "kiwidab3st", "poly1scute", "aj4xth3m4n"];

// const loginToFind = "poly1scute";

// let message = "";

// for (let i = 0; i < logins.length; i += 1) {
//   const login = logins[i];

//   if (login === loginToFind) {
//     message = `Пользователь ${loginToFind} найден.`;

//     break;
//   }

//   message = `Пользователь ${loginToFind} не найден.`;
// }

// console.log(message);

///////////////////////////////////////////////////////////////////////////

// Напиши скрипт поиска самого маленького числа в массиве,

// при условии что числа уникальные (не повторяются).

// const numbers = [51, 18, 13, 24, 7, 85, 19];

// let smallestNumber = numbers[0];

// for (const number of numbers) {
//   if (number < smallestNumber) {
//     smallestNumber = number;
//   }
// }

// console.log("smallestNumber:", smallestNumber);

////////////////////////////////////////////////////////////////////////////////
