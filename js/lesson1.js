//-------------------------------
// Number.parseInt;
// let x = "500px";
// x = Number.parseInt(x);
// console.log("Цена", v);
//ответ = 500

//-------------------------------
// Number.parseFloat;
// let x = "500.656px";
// x = Number.parseFloat(x);
// console.log("Цена", v);
// ответ  = 500.656

//--------------------------------
// .toFixed(количество после точки)
// let v = 500.6567688;
// делает значение строкой
// v = v.toFixed(2);
// переводим значение в число
// v = Number(v);

// console.log("Цена", v);
// ответ = 500.66

//--------------------
// Возведение в степень
// const r = 2;
// const g = 4;
// console.log(r ** g);

//------------------------------
// генерим псевдослучайные числа Math.round(Math.random()* (a - b) + b);

// const a = 20;
// const b = 30;

// const x = Math.round(Math.random() * (a - b) + b);
// console.log(x);
//ответ надомное число без остатков

//--------------------------------
//проверяем длину строки .length
// const message = `в этой строке 26 символов.`;
// console.log(message.length);
// ответ 26

//--------------------
// слияние строк
// const a = "max";
// const b = "hi";
// const ab = a +' '+ b;
// console.log(ab);
// ответ max пробел hi

//----------------------------
//шаблонные строки(template strings)
// const a = 550;
// const b = `стоимость проезда ${a} грн.`;
// console.log(b);
//ответ - стоимость проезда 550 грн.

//-------------------------------
//нормализация текста к нижнему регистру .toLowerCase();
// let a = "Samsung";
// a = a.toLowerCase();

// console.log(a);
//  ответ samsung

//-------------------------------------------------
//нормализация текста к нижнему регистру кроме 1 буквы в слове
// let a = "SaMSung";
// a = a[0] + a.slice(1).toLowerCase();

// console.log(a);
//  ответ Samsung

//--------------------------------------------
//поиск с методом .includes() нужного слова
// const a = "стул";
// const b = "чай";

// const c = "привет найди слова  стул";
// let d = "привет найди слова ЧАЙ";

// console.log(c.includes(a));
// console.log(d.includes(a));

// d = d.toLowerCase();
// console.log(c.includes(b));
// console.log(d.includes(b));
// ответы
// 87 true
// 88 false
// 91 false
// 92 true

//------------------------
// Операторы сравнения
// console.log(5 > 10); //false
// console.log(15 > 10); //true
// console.log(15 = 10); //False
// console.log(15 = 15); //true

//-------------------------------
//Приведение преобразование типов к числу
// console.log("5" > 10); //false
// console.log("15" > 10); //true

//-----------------------------------
//Операторы равенства (== и ===) и (!==)
// const a = 5 == 5; //true
// const b = "5" == 5; //true
// const c = "5" === 5; //false

// const e = "5" !== 5; //true
// const d = 5 !== 5; //false

// console.log(a);
// console.log(b);
// console.log(c);

// console.log(e);
// console.log(d);

//---------------------------------
//Boolean - логический тип данных, флаги состояния. Всего два значения: true и false.
//Например, на вопрос включен ли свет в комнате можно ответить да(true) или нет(false).

// true — да, верно, истина, 1
// false — нет, неверно, ложь, 0
// Запомните 6 ложных(falsy) значений, приводящихся к false в логическом преобразовании:
// 0, NaN, null, undefined, пустая строка и false.Абсолютно все остальное приводится к true.
// console.log(Boolean(0));

//---------------------------------
// логическое значение И (оператор &&)
//запинается на лжи
//Возвращает на чем запнулась или последний операнд
// console.log(4 && 77 && 88 && 99 && "mango"); // mango
// console.log(4 && 77 && 0 && 99 && "mango"); // 0
// console.log(0 && 77 && 88 && 77 && "mango"); // 0

//------------------------------------
//логическое значение ИЛИ (оператор ||)
//запинается на правде
//Возвращает на чем запнулась или последний операнд
// console.log(NaN || null || null || null || 0); // 0
// console.log(4 || 77 || 88 || 99 || "mango"); // 4
// console.log(8 || 77 || 0 || 99 || "mango"); // 99
// console.log(0 || null|| 8 || 7 || "mango"); // 88
// console.log(0 || null|| 888 || 0 || "0"); // 888

//------------------------------------
//логическое значение НЕ (оператор !)
//может доказать на лубом значении обратное
// console.log(!true); // false
// console.log(!false); // true
// console.log(!0); // true
// console.log(!1); // false

//------------------------------------
//оператор ветвления if
//код по условию
// if (false) {
//   //значение не будет выполняться
//   // перейдет на следующую задачу
// }

// if (true) {
//   //значение будет выполняться
// }

//оператор ветвления if ..... else
//логическое ветвления
//код по условию
// if (false) {
//значение не будет выполняться
//перейдет на следующую задачу
// } else (true) {
//значение будет выполняться if (false)
//значение не будет выполняться if (true)
// }

//оператор ветвления if. else....if
//Выбирает только 1 правильное решение
//код по условию
//const a = 5;

// if (a = 10) {

// } else if(a = 5) {

// }
// }  else if(a = 13) {

// }
// ответ 2

//еще один пример-
//const b = 6;

// if (b = 10) {

// } else if (b = 5) {

// } else if (b = 13) {

// } else {
//console.log( привет);
//}
//выполнит то что в else покажет "привет"

//--------------------------------------------------------------------
//Тернарный оператор
//
// вариант через IF
// const balance = 0;
// let message;

// if (balance >= 1) {
//   message = "позитивный баланс";
// } else {
//   message = "негативный баланс";
// }

// или Тернарный вариант
// const balance = 0;
// const message = balance >= 1 ? "позитивный баланс" : "негативный баланс";
// console.log(message);

//-----------------------------------
// Блочная область видимости переменных
//const виден только в блоке лог за блоком не будет видно что в test
// if (true) {
//   const test = 5;
//   console.log(test); //видно
// }
// console.log(test); // не видно
